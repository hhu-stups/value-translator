image: openjdk:8u181-jdk-slim

stages:
  - test
  - analyze
  - deploy

variables:
  GRADLE_ARGS: --no-daemon --stacktrace

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

tests:
  stage: test
  script: ./gradlew ${GRADLE_ARGS} test
  artifacts:
    paths:
      - build/reports/tests/
    when: on_failure

tests:jdk-11:
  extends: tests
  image: openjdk:11-jdk-sid

spotbugs:
  stage: analyze
  script: ./gradlew ${GRADLE_ARGS} spotBugsMain spotBugsTest
  artifacts:
    paths:
      - build/reports/spotbugs/
    when: on_failure

checkstyle:
  stage: analyze
  script: ./gradlew ${GRADLE_ARGS} checkstyleTest checkstyleMain
  artifacts:
    paths:
      - build/reports/checkstyle/
    when: on_failure

pmd:
  stage: analyze
  script: ./gradlew ${GRADLE_ARGS} pmdMain
  artifacts:
    paths:
      - build/reports/pmd/
    when: on_failure

pitest:
  stage: analyze
  script: ./gradlew ${GRADLE_ARGS} pitest
  artifacts:
    paths:
      - build/reports/pitest/
    when: always


sonarqube:
  stage: analyze
  script: ./gradlew ${GRADLE_ARGS} -Dsonar.token=${SONAR_TOKEN} sonarqube
  allow_failure: true
  only:
      - branches@stups/prob/value-translator


publish:
  stage: deploy
  script:
    - openssl aes-256-cbc -pass "env:ENCRYPTION_PASSWORD" -d -a -md md5 -in secring.gpg.enc       -out ../secring.gpg
    - openssl aes-256-cbc -pass "env:ENCRYPTION_PASSWORD" -d -a -md md5 -in pubring.gpg.enc       -out pubring.gpg
    - openssl aes-256-cbc -pass "env:ENCRYPTION_PASSWORD" -d -a -md md5 -in gradle.properties.enc -out gradle.properties
    - ./gradlew ${GRADLE_ARGS} publishMavenJavaPublicationToMavenRepository
  only:
    - master
    - develop
