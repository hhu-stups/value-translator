import com.github.spotbugs.snom.SpotBugsTask

import java.util.concurrent.TimeUnit

plugins {
    id 'java-library'

    id "com.github.spotbugs" version "6.1.7"
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'

    id 'info.solidsoft.pitest' version '1.15.0'

    id 'maven-publish'
    id 'signing'
}

group = "de.hhu.stups"
version = "0.2.1-SNAPSHOT"
final isSnapshot = project.version.endsWith("-SNAPSHOT")

repositories {
    mavenCentral()
    if (isSnapshot) {
        maven {
            name = "sonatype snapshots"
            url = "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor(0, TimeUnit.SECONDS)
    }
}

dependencies {
    api group: "de.hhu.stups", name: "bparser", version: "2.15.2"

    // SuppressFBWarnings is not a source-only annotation,
    // so this has to be an implementation dependency and not compileOnly.
    implementation group: "com.github.spotbugs", name: "spotbugs-annotations", version: "4.8.6"

    testImplementation group: "nl.jqno.equalsverifier", name: "equalsverifier", version: "3.19.1"
    testImplementation group: "org.assertj", name: "assertj-core", version: "3.27.3"
    testImplementation(platform(group: "org.junit", name: "junit-bom", version: "5.12.1"))
    testImplementation group: "org.junit.jupiter", name: "junit-jupiter"
    testRuntimeOnly group: "org.junit.platform", name: "junit-platform-launcher"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withSourcesJar()
    withJavadocJar()
}

javadoc {
    // silence warnings on missing javadoc
    options.addBooleanOption('Xdoclint:all,-missing', true)
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

pitest {
    // The junit5PluginVersion setting internally uses the following Maven coordinates:
    // group: "org.pitest", name: "pitest-junit5-plugin", version: <specified below>
    // https://central.sonatype.com/artifact/org.pitest/pitest-junit5-plugin
    junit5PluginVersion = "1.2.2"
    threads = 4
}

pmd {
    toolVersion = "7.11.0"
    // https://stackoverflow.com/a/53696963/10326268
    ruleSets = []
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/pmd.xml')
    // only apply pmd to src/main
    sourceSets = [sourceSets.main]
}

spotbugs {
    toolVersion = '4.8.6'
}

tasks.withType(SpotBugsTask).configureEach {
    reports {
        html.required.set(true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Value Translator'
                description = 'Library to translate Classical B values into Java objects.'
                url = 'https://github.com/hhu-stups/value-translator'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/hhu-stups/value-translator/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'bivab'
                        name = 'David Schneider'
                        email = 'david.schneider@hhu.de'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:hhu-stups/value-translator.git'
                    developerConnection = 'scm:git:ssh://github.com:hhu-stups/value-translator.git'
                    url = 'https://github.com/hhu-stups/value-translator'
                }
            }
        }

    }
    repositories {
        maven {
            final def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            final def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = isSnapshot ? snapshotsRepoUrl : releasesRepoUrl
            if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
                credentials {
                    username = project.ossrhUsername
                    password = project.ossrhPassword
                }
            }
        }
    }
}

ext."signing.secretKeyRingFile" = rootProject.file("secring.gpg").absolutePath

signing {
    sign publishing.publications.mavenJava
}
