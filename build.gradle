plugins {
    id 'java-library'

    id "com.github.spotbugs" version "1.6.6"
    id "org.sonarqube" version "2.6.2"
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'

    id 'maven-publish'
}

targetCompatibility = '8'
sourceCompatibility = '8'

group = "de.hhu.stups"
version = "0.0.1-SNAPSHOT"

def parserVersion
if (project.version.endsWith("-SNAPSHOT")) {
    parserVersion = '2.9.14-SNAPSHOT'
} else {
    parserVersion = '2.9.13'
}

dependencies {
    implementation group: "de.hhu.stups", name: "bparser", version: parserVersion, changing: true
    testCompile 'com.github.spotbugs:spotbugs-annotations:3.1.9'
    testCompile("org.assertj:assertj-core:3.11.1")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        name "sonatype snapshots"
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        name "sonatype snapshots"
        url "https://oss.sonatype.org/content/repositories/releases"
    }
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarqube.cs.uni-duesseldorf.de/"
        property "sonar.login", System.getProperty("sonar.token")
    }
}

pmd {
    toolVersion = '6.1.0'
    // https://stackoverflow.com/a/53696963/10326268
    ruleSets = []
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/pmd.xml')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Value Translator'
                description = 'Library to translate Classical B values into Java objects.'
                url = 'https://github.com/hhu-stups/value-translator'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/hhu-stups/value-translator/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'bivab'
                        name = 'David Schneider'
                        email = 'david.schneider@hhu.de'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:hhu-stups/value-translator.git'
                    developerConnection = 'scm:git:ssh://github.com:hhu-stups/value-translator.git'
                    url = 'https://github.com/hhu-stups/value-translator'
                }
            }
        }
    }
}
